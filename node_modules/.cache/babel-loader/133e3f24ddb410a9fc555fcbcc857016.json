{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tung Ngo\\\\translator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect } from 'react';\nimport Result from \"./Result\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst synth = window.speechSynthesis;\n\nfunction App() {\n  _s();\n\n  const voices = useMemo(() => synth.getVoices(), []);\n  const [voiceSelected, setVoiceSelected] = useState(\"Google US English\");\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"English Dictionary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          cols: \"30\",\n          rows: \"4\",\n          placeholder: \"Enter the text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voices-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-voices\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: voiceSelected,\n              onChange: e => setVoiceSelected(e.target.value),\n              children: voices.map(voices => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: voices.name,\n                children: voices.name\n              }, voices.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-volume-high\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v0hV5vsRjYJD6SV4Nbw56Jk2xFc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","Result","synth","window","speechSynthesis","App","voices","getVoices","voiceSelected","setVoiceSelected","text","setText","e","target","value","map","name"],"sources":["C:/Users/Tung Ngo/translator/src/App.js"],"sourcesContent":["import React, {useState, useMemo, useEffect} from 'react'\n\nimport Result from \"./Result\";\n\n\n\nconst synth = window.speechSynthesis;\n\n\nfunction App() {\n\n  const voices = useMemo(() => synth.getVoices(), [])\n\n  const [voiceSelected, setVoiceSelected] = useState(\"Google US English\")\n\n  const [text, setText] = useState(\"\")\n\n\n\n  return (\n    <div className=\"container\">\n      <h1>English Dictionary</h1>\n      \n      <form>\n        <div className=\"row\">\n          <textarea cols=\"30\" rows=\"4\"\n          placeholder=\"Enter the text\"\n          value={text}\n          onChange = { e => setText(e.target.value)}     \n          />\n\n          <div className=\"voices-icons\">\n            <div className=\"select-voices\">\n              <select value={voiceSelected}\n              onChange = {e => setVoiceSelected(e.target.value)}\n              >\n\n                {\n                  voices.map(voices => (\n                    <option key={voices.name} value={voices.name}>{voices.name}</option>\n                  ))\n                }\n\n                \n              </select>\n            </div>\n\n            <i className=\"fa-solid fa-volume-high\"/>\n          </div>\n        </div>\n      </form>\n\n      <Result/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,EAAkCC,SAAlC,QAAkD,OAAlD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,MAAMC,KAAK,GAAGC,MAAM,CAACC,eAArB;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAMC,MAAM,GAAGP,OAAO,CAAC,MAAMG,KAAK,CAACK,SAAN,EAAP,EAA0B,EAA1B,CAAtB;EAEA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,mBAAD,CAAlD;EAEA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;EAIA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,wBACE;UAAU,IAAI,EAAC,IAAf;UAAoB,IAAI,EAAC,GAAzB;UACA,WAAW,EAAC,gBADZ;UAEA,KAAK,EAAEY,IAFP;UAGA,QAAQ,EAAKE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;QAHzB;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAK,SAAS,EAAC,cAAf;UAAA,wBACE;YAAK,SAAS,EAAC,eAAf;YAAA,uBACE;cAAQ,KAAK,EAAEN,aAAf;cACA,QAAQ,EAAII,CAAC,IAAIH,gBAAgB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CADjC;cAAA,UAKIR,MAAM,CAACS,GAAP,CAAWT,MAAM,iBACf;gBAA0B,KAAK,EAAEA,MAAM,CAACU,IAAxC;gBAAA,UAA+CV,MAAM,CAACU;cAAtD,GAAaV,MAAM,CAACU,IAApB;gBAAA;gBAAA;gBAAA;cAAA,QADF;YALJ;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAgBE;YAAG,SAAS,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QAhBF;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAgCE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAhCF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD;;GA9CQX,G;;KAAAA,G;AAgDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}